#!/bin/python

def func_to_proc_type(func):
	return "PFN%sPROC" % func.upper()

def func_to_defn(func):
	return "%s %s;" % (func_to_proc_type(func), func)

def func_to_decl(func):
	return "extern %s %s;" % (func_to_proc_type(func), func)

def func_to_setup(func):
	data = {"type": func_to_proc_type(func), "func": func }
	return '%(func)s = (%(type)s)get("%(func)s"); assert(%(func)s);' % data

def main():
	file = open("data_gl_core.txt", "r")

	generatedBy = "// Generated by scripts/%s\n" % __file__

	declFile = open("../src/opengl/generated/gldecl.inl", "w")
	defnFile = open("../src/opengl/generated/gldefn.inl", "w")
	setupFile = open("../src/opengl/generated/glsetup.inl", "w")


	declFile.write(generatedBy)
	defnFile.write(generatedBy)
	setupFile.write(generatedBy)

	for line in file:
		line = line.strip()

		if not line:
			continue

		if line.startswith("#"):
			continue

		decl = func_to_decl(line)
		defn = func_to_defn(line)
		setup = func_to_setup(line)

		print (line)

		declFile.write(decl)
		declFile.write('\n')
		defnFile.write(defn)
		defnFile.write('\n')
		setupFile.write(setup)
		setupFile.write('\n')

if __name__ == "__main__":
	main()